// server.js

// BASE SETUP
// =============================================================================

// call the packages we need
var express    = require('express');        // call express
var app        = express();                 // define our app using express
var bodyParser = require('body-parser');
var nunjucks = require('nunjucks');
nunjucks.configure('views', {
    autoescape: true,
    express: app
});

var MongoClient = require('mongodb').MongoClient, assert = require('assert');

var uri = 'mongodb://bear:Password-1@cluster0-shard-00-00-yqvw6.mongodb.net:27017,cluster0-shard-00-01-yqvw6.mongodb.net:27017,cluster0-shard-00-02-yqvw6.mongodb.net:27017/test?ssl=true&replicaSet=Cluster0-shard-0&authSource=admin';

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());
app.use(express.static('client'));

var port = process.env.PORT || 8080;        // set our port

// ROUTES FOR OUR API
// =============================================================================
var router = express.Router();              // get an instance of the express Router
var render = express.Router();

// middleware to use for all requests
router.use(function(req, res, next) {
    // do logging
    console.log('Something is happening.');
    next(); // make sure we go to the next routes and don't stop here
});

// test route to make sure everything is working (accessed at GET http://localhost:8080/api)
router.get('/', function(req, res) {
		res.render('test.html',{message: 'Welcome to our API!'}); 
});

//CRUD operations
class CRUD{
//Create
static create(collectionName, req, res){
	//takes collectionName[string]
	MongoClient.connect(uri, function(err, db) {
		db.collection(collectionName).insertOne(req.query)
		.then(function(result){
			//Is it possible to grab the bear by id??
		db.close();
		})
	})	
}
//Read
static readAll(collectionName, req, res, option){
	//gets all from the selected collection
	MongoClient.connect(uri, function(err, db) {
		db.collection(collectionName).find({}).toArray(function(err, docs) {
			if(option === 'render'){
			var listOfItems= [];
			docs.forEach(function(bear){
				listOfItems.push(bear);
				});
			res.render('bears.html',{bears: listOfItems});
			} else{
			res.json(docs);
			}
			db.close();
		});
	});
}
static readId(collectionName, req, res, option){
	//gets by id(generated by MongoDB)
	let ObjectId = require('mongodb').ObjectId; 
	let id = req.params._id;       
	let o_id = new ObjectId(id);
	MongoClient.connect(uri, function(err, db) {
		db.collection(collectionName).find({_id:o_id}).toArray(function(err, docs){
			if (option === 'render'){
			res.render('bearsByID.html',{name: docs[0].name,id: docs[0]._id});
			} else {			
			res.json(docs);
			}
			db.close();
		})
	})
}

//Update
static update(collectionName, req, res){
	let ObjectId = require('mongodb').ObjectId; 
	let id = req.params._id;       
	let o_id = new ObjectId(id);
	let value = req.query
	MongoClient.connect(uri, function(err, db) {
		db.collection(collectionName).updateOne({_id:o_id}, {$set:value},function(){
			db.close();
		})
	})
}
//Delete
static del(collectionName, req, res){
	let ObjectId = require('mongodb').ObjectId; 
	let id = req.params._id;       
	let o_id = new ObjectId(id);
	let value = req.query
	MongoClient.connect(uri, function(err, db) {
		db.collection(collectionName).deleteOne({_id:o_id}, function(){
			res.json({message: 'Bear Deleted'});
			db.close();
		})
	})
}
//end of CRUD operations
}
// more routes for our API will happen here

// on routes that end in /bears
// ----------------------------------------------------
// create a bear (accessed at POST http://localhost:8080/api/bears)
router.post('/bears', function (req, res) {
	CRUD.create('bears',req,res);
	//how can we get ID Mongo docs will know
	//CRUD.readId('bears',req, res, false);
});

// get all the bears (accessed at GET http://localhost:8080/api/bears)
router.get('/bears',function(req, res) {
	CRUD.readAll('bears',req,res, false);	
});

//get bear by object id(defined by MongoDB) (accessed at GET http://localhost:8080/api/bears/id)
router.get('/bears/:_id',function(req, res){
	CRUD.readId('bears',req, res, false);	
});

//update bear will grab a bear, and update all that is new (accessed at POST http://localhost:8080/api/bears/id)
router.post('/bears/:_id',function(req, res) {
	CRUD.update('bears',req,res);
	CRUD.readId('bears',req, res, false);
});

//delete bear
router.delete('/bears/:_id',function(req, res) {
	CRUD.del('bears',req,res);
});

//RENDERING OF PAGES
// get all the bears (accessed at GET http://localhost:8080/bears)
render.get('/',function(req, res) {
	CRUD.readAll('bears',req,res, 'render');	
});

//get bear by object id(defined by MongoDB) (accessed at GET http://localhost:8080/bears/id)
render.get('/:_id',function(req, res){
	CRUD.readId('bears',req, res, 'render');	
});

// REGISTER OUR ROUTES -------------------------------
// all of our routes will be prefixed with /api
app.use('/api', router);

app.use('/bears', render);
// START THE SERVER
// =============================================================================
app.listen(port);
console.log('Listening on port ' + port);
